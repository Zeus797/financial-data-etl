"""create_universal_schema

Revision ID: 4034d70d7160
Revises: 
Create Date: 2025-06-12 20:01:57.907575

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4034d70d7160'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dim_countries',
    sa.Column('country_code', sa.String(length=2), nullable=False),
    sa.Column('country_name', sa.String(length=100), nullable=False),
    sa.Column('region', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('country_code')
    )
    op.create_table('dim_dates',
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('full_date', sa.Date(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('month_name', sa.String(length=20), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('day_of_year', sa.Integer(), nullable=False),
    sa.Column('day_of_month', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('day_name', sa.String(length=20), nullable=False),
    sa.Column('is_weekend', sa.Boolean(), nullable=False),
    sa.Column('is_holiday', sa.Boolean(), nullable=True),
    sa.Column('holiday_name', sa.String(length=100), nullable=True),
    sa.Column('fiscal_year', sa.Integer(), nullable=True),
    sa.Column('fiscal_quarter', sa.Integer(), nullable=True),
    sa.Column('is_market_day', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('date_key'),
    sa.UniqueConstraint('full_date')
    )
    op.create_index('idx_dates_market_day', 'dim_dates', ['is_market_day', 'full_date'], unique=False)
    op.create_index('idx_dates_quarter', 'dim_dates', ['fiscal_year', 'fiscal_quarter'], unique=False)
    op.create_index('idx_dates_year_month', 'dim_dates', ['year', 'month'], unique=False)
    op.create_table('dim_currencies',
    sa.Column('currency_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('currency_name', sa.String(length=100), nullable=False),
    sa.Column('country_code', sa.String(length=2), nullable=False),
    sa.ForeignKeyConstraint(['country_code'], ['dim_countries.country_code'], ),
    sa.PrimaryKeyConstraint('currency_id'),
    sa.UniqueConstraint('currency_code')
    )
    op.create_table('dim_entities',
    sa.Column('entity_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('entity_name', sa.String(length=255), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_code', sa.String(length=20), nullable=True),
    sa.Column('country_code', sa.String(length=3), nullable=True),
    sa.Column('website_url', sa.Text(), nullable=True),
    sa.Column('regulatory_status', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['country_code'], ['dim_countries.country_code'], ),
    sa.PrimaryKeyConstraint('entity_id')
    )
    op.create_index('idx_entities_active', 'dim_entities', ['is_active'], unique=False)
    op.create_index('idx_entities_type_country', 'dim_entities', ['entity_type', 'country_code'], unique=False)
    op.create_table('dim_financial_instruments',
    sa.Column('instrument_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_type', sa.String(length=50), nullable=False),
    sa.Column('instrument_name', sa.String(length=255), nullable=False),
    sa.Column('instrument_code', sa.String(length=50), nullable=True),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('primary_currency_code', sa.String(length=3), nullable=False),
    sa.Column('secondary_currency_code', sa.String(length=3), nullable=True),
    sa.Column('issuer_entity_id', sa.Integer(), nullable=True),
    sa.Column('manager_entity_id', sa.Integer(), nullable=True),
    sa.Column('asset_class', sa.String(length=50), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=True),
    sa.Column('isin', sa.String(length=20), nullable=True),
    sa.Column('cusip', sa.String(length=20), nullable=True),
    sa.Column('coingecko_id', sa.String(length=100), nullable=True),
    sa.Column('bloomberg_ticker', sa.String(length=50), nullable=True),
    sa.Column('is_stablecoin', sa.Boolean(), nullable=True),
    sa.Column('is_esg_compliant', sa.Boolean(), nullable=True),
    sa.Column('is_sharia_compliant', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('inception_date', sa.Date(), nullable=True),
    sa.Column('maturity_date', sa.Date(), nullable=True),
    sa.Column('minimum_investment', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['issuer_entity_id'], ['dim_entities.entity_id'], ),
    sa.ForeignKeyConstraint(['manager_entity_id'], ['dim_entities.entity_id'], ),
    sa.ForeignKeyConstraint(['primary_currency_code'], ['dim_currencies.currency_code'], ),
    sa.ForeignKeyConstraint(['secondary_currency_code'], ['dim_currencies.currency_code'], ),
    sa.PrimaryKeyConstraint('instrument_id')
    )
    op.create_index('idx_instruments_active_asset_class', 'dim_financial_instruments', ['is_active', 'asset_class', 'instrument_type'], unique=False)
    op.create_index('idx_instruments_active_type', 'dim_financial_instruments', ['is_active', 'instrument_type'], unique=False)
    op.create_index('idx_instruments_asset_class', 'dim_financial_instruments', ['asset_class', 'risk_level'], unique=False)
    op.create_index('idx_instruments_bloomberg', 'dim_financial_instruments', ['bloomberg_ticker'], unique=False)
    op.create_index('idx_instruments_bonds_maturity', 'dim_financial_instruments', ['instrument_type', 'maturity_date'], unique=False)
    op.create_index('idx_instruments_coingecko', 'dim_financial_instruments', ['coingecko_id'], unique=False)
    op.create_index('idx_instruments_currency_asset', 'dim_financial_instruments', ['primary_currency_code', 'asset_class'], unique=False)
    op.create_index('idx_instruments_cusip', 'dim_financial_instruments', ['cusip'], unique=False)
    op.create_index('idx_instruments_esg_compliance', 'dim_financial_instruments', ['is_esg_compliant', 'asset_class'], unique=False)
    op.create_index('idx_instruments_inception', 'dim_financial_instruments', ['inception_date'], unique=False)
    op.create_index('idx_instruments_isin', 'dim_financial_instruments', ['isin'], unique=False)
    op.create_index('idx_instruments_issuer', 'dim_financial_instruments', ['issuer_entity_id'], unique=False)
    op.create_index('idx_instruments_issuer_type', 'dim_financial_instruments', ['issuer_entity_id', 'instrument_type'], unique=False)
    op.create_index('idx_instruments_manager', 'dim_financial_instruments', ['manager_entity_id'], unique=False)
    op.create_index('idx_instruments_maturity', 'dim_financial_instruments', ['maturity_date'], unique=False)
    op.create_index('idx_instruments_stablecoin', 'dim_financial_instruments', ['is_stablecoin'], unique=False)
    op.create_index('idx_instruments_type_currency', 'dim_financial_instruments', ['instrument_type', 'primary_currency_code'], unique=False)
    op.create_table('fact_carbon_offsets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('price_per_tonne', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('volume_traded', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('total_value', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('price_change_1d', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('price_change_7d', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('price_change_30d', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('price_volatility', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('project_type', sa.String(length=50), nullable=True),
    sa.Column('project_location', sa.String(length=100), nullable=True),
    sa.Column('project_vintage', sa.Integer(), nullable=True),
    sa.Column('methodology', sa.String(length=50), nullable=True),
    sa.Column('standard', sa.String(length=30), nullable=True),
    sa.Column('additionality_verified', sa.Boolean(), nullable=True),
    sa.Column('permanence_rating', sa.String(length=20), nullable=True),
    sa.Column('co_benefits', sa.Text(), nullable=True),
    sa.Column('credits_issued', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('credits_retired', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('credits_available', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('retirement_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('market_share', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('buyer_type', sa.String(length=30), nullable=True),
    sa.Column('geographic_demand', sa.String(length=50), nullable=True),
    sa.Column('reversal_risk', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('political_risk', sa.String(length=20), nullable=True),
    sa.Column('delivery_risk', sa.String(length=20), nullable=True),
    sa.Column('co2_equivalent_tonnes', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('monitoring_frequency', sa.String(length=20), nullable=True),
    sa.Column('verification_date', sa.Date(), nullable=True),
    sa.Column('platform', sa.String(length=50), nullable=True),
    sa.Column('transaction_fee', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('settlement_period', sa.Integer(), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('quality_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['date_key'], ['dim_dates.date_key'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['dim_financial_instruments.instrument_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_id', 'record_date', 'project_vintage', name='uq_co_instrument_date_vintage')
    )
    op.create_index('idx_co_date_instrument', 'fact_carbon_offsets', ['record_date', 'instrument_id'], unique=False)
    op.create_index('idx_co_price_volume', 'fact_carbon_offsets', ['price_per_tonne', 'volume_traded'], unique=False)
    op.create_index('idx_co_project_type', 'fact_carbon_offsets', ['project_type', 'project_location'], unique=False)
    op.create_index('idx_co_quality_risk', 'fact_carbon_offsets', ['quality_score', 'reversal_risk'], unique=False)
    op.create_index('idx_co_standard_vintage', 'fact_carbon_offsets', ['standard', 'project_vintage'], unique=False)
    op.create_table('fact_cryptocurrency_prices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('market_cap', sa.DECIMAL(precision=20, scale=2), nullable=True),
    sa.Column('total_volume', sa.DECIMAL(precision=20, scale=2), nullable=True),
    sa.Column('circulating_supply', sa.DECIMAL(precision=20, scale=2), nullable=True),
    sa.Column('price_change_24h', sa.DECIMAL(precision=12, scale=8), nullable=True),
    sa.Column('price_change_percentage_24h', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('price_change_percentage_7d', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('price_change_percentage_30d', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('deviation_from_dollar', sa.DECIMAL(precision=12, scale=10), nullable=True),
    sa.Column('within_01_percent', sa.Boolean(), nullable=True),
    sa.Column('within_05_percent', sa.Boolean(), nullable=True),
    sa.Column('within_1_percent', sa.Boolean(), nullable=True),
    sa.Column('price_band', sa.String(length=20), nullable=True),
    sa.Column('rolling_avg_7d', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('rolling_avg_30d', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('rolling_std_7d', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('rolling_std_30d', sa.DECIMAL(precision=20, scale=8), nullable=True),
    sa.Column('volatility_7d', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('volatility_30d', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('market_cap_rank', sa.Integer(), nullable=True),
    sa.Column('market_dominance_percentage', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['date_key'], ['dim_dates.date_key'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['dim_financial_instruments.instrument_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_id', 'record_date', name='uq_crypto_instrument_date')
    )
    op.create_index('idx_crypto_date_instrument', 'fact_cryptocurrency_prices', ['record_date', 'instrument_id'], unique=False)
    op.create_index('idx_crypto_market_cap', 'fact_cryptocurrency_prices', ['record_date', 'market_cap'], unique=False)
    op.create_index('idx_crypto_stablecoin', 'fact_cryptocurrency_prices', ['instrument_id', 'deviation_from_dollar'], unique=False)
    op.create_table('fact_etf_performance',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('nav_per_share', sa.DECIMAL(precision=12, scale=4), nullable=True),
    sa.Column('market_price', sa.DECIMAL(precision=12, scale=4), nullable=True),
    sa.Column('premium_discount', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('volume', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('dollar_volume', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('bid_ask_spread', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('total_return_1d', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_return_1w', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_return_1m', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_return_3m', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_return_ytd', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_return_1y', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('volatility_30d', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('beta', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('sharpe_ratio', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('max_drawdown', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_assets', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('shares_outstanding', sa.DECIMAL(precision=15, scale=0), nullable=True),
    sa.Column('expense_ratio', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('dividend_yield', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('top_10_holdings_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('number_of_holdings', sa.Integer(), nullable=True),
    sa.Column('portfolio_turnover', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('cash_percentage', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('technology_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('healthcare_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('financials_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('energy_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('developed_markets_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('emerging_markets_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('africa_allocation_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('esg_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('carbon_intensity', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('green_revenue_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('net_flows_1d', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('net_flows_1w', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('net_flows_1m', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('tracking_error', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('tracking_difference', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('correlation_to_benchmark', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('distribution_frequency', sa.String(length=20), nullable=True),
    sa.Column('last_distribution_amount', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('distribution_yield_ttm', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('benchmark_index', sa.String(length=100), nullable=True),
    sa.Column('fund_inception_date', sa.Date(), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('fund_family', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['date_key'], ['dim_dates.date_key'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['dim_financial_instruments.instrument_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_id', 'record_date', name='uq_etf_instrument_date')
    )
    op.create_index('idx_etf_assets_flows', 'fact_etf_performance', ['total_assets', 'net_flows_1m'], unique=False)
    op.create_index('idx_etf_date_instrument', 'fact_etf_performance', ['record_date', 'instrument_id'], unique=False)
    op.create_index('idx_etf_esg_green', 'fact_etf_performance', ['esg_score', 'green_revenue_pct'], unique=False)
    op.create_index('idx_etf_expense_yield', 'fact_etf_performance', ['expense_ratio', 'dividend_yield'], unique=False)
    op.create_index('idx_etf_nav_volume', 'fact_etf_performance', ['nav_per_share', 'dollar_volume'], unique=False)
    op.create_index('idx_etf_performance', 'fact_etf_performance', ['total_return_1m', 'total_return_ytd'], unique=False)
    op.create_table('fact_fixed_deposits',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('deposit_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('term_months', sa.Integer(), nullable=True),
    sa.Column('interest_rate', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('effective_rate', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('base_rate', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('negotiated_rate', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('promotional_rate', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('senior_citizen_bonus', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('minimum_deposit', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('maximum_deposit', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('early_withdrawal_penalty', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('auto_renewal', sa.Boolean(), nullable=True),
    sa.Column('tax_rate', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('after_tax_return', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('market_rank', sa.Integer(), nullable=True),
    sa.Column('rate_premium_to_market', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('rate_type', sa.String(length=20), nullable=True),
    sa.Column('currency_code', sa.String(length=3), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('last_verified', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['date_key'], ['dim_dates.date_key'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['dim_financial_instruments.instrument_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_id', 'record_date', 'term_months', name='uq_fd_instrument_date_term')
    )
    op.create_index('idx_fd_amount_range', 'fact_fixed_deposits', ['minimum_deposit', 'maximum_deposit'], unique=False)
    op.create_index('idx_fd_currency_term', 'fact_fixed_deposits', ['currency_code', 'term_months'], unique=False)
    op.create_index('idx_fd_date_instrument', 'fact_fixed_deposits', ['record_date', 'instrument_id'], unique=False)
    op.create_index('idx_fd_rate_term', 'fact_fixed_deposits', ['interest_rate', 'term_months'], unique=False)
    op.create_table('fact_forex_rates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('open_rate', sa.DECIMAL(precision=12, scale=8), nullable=True),
    sa.Column('high_rate', sa.DECIMAL(precision=12, scale=8), nullable=True),
    sa.Column('low_rate', sa.DECIMAL(precision=12, scale=8), nullable=True),
    sa.Column('exchange_rate', sa.DECIMAL(precision=12, scale=8), nullable=True),
    sa.Column('volume', sa.DECIMAL(precision=20, scale=2), nullable=True),
    sa.Column('dividends', sa.DECIMAL(precision=12, scale=8), nullable=True),
    sa.Column('stock_splits', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('base_currency', sa.String(length=3), nullable=True),
    sa.Column('quote_currency', sa.String(length=3), nullable=True),
    sa.Column('pair', sa.String(length=10), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('quarter', sa.Integer(), nullable=True),
    sa.Column('year_quarter', sa.String(length=10), nullable=True),
    sa.Column('monthly_pct_change', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('yoy_pct_change', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('quarterly_volatility', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('annual_volatility', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('significant_move', sa.Boolean(), nullable=True),
    sa.Column('ma_12_month', sa.DECIMAL(precision=12, scale=8), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['date_key'], ['dim_dates.date_key'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['dim_financial_instruments.instrument_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_id', 'record_date', name='uq_forex_instrument_date')
    )
    op.create_index('idx_forex_date_instrument', 'fact_forex_rates', ['record_date', 'instrument_id'], unique=False)
    op.create_index('idx_forex_pair_date', 'fact_forex_rates', ['pair', 'record_date'], unique=False)
    op.create_index('idx_forex_significant_moves', 'fact_forex_rates', ['significant_move', 'record_date'], unique=False)
    op.create_index('idx_forex_volatility', 'fact_forex_rates', ['record_date', 'quarterly_volatility'], unique=False)
    op.create_table('fact_green_bonds',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('clean_price', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('dirty_price', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('yield_to_maturity', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('green_premium', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('total_return_1m', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_return_3m', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_return_ytd', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('duration', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('convexity', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('green_certification', sa.String(length=50), nullable=True),
    sa.Column('esg_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('carbon_avoided_tonnes', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('renewable_energy_mwh', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('proceeds_allocated_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('renewable_energy_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('energy_efficiency_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('sustainable_transport_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('water_management_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('impact_report_available', sa.Boolean(), nullable=True),
    sa.Column('impact_verification', sa.String(length=50), nullable=True),
    sa.Column('sdg_alignment', sa.Text(), nullable=True),
    sa.Column('outstanding_amount', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('trading_volume', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('bid_ask_spread', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('credit_rating', sa.String(length=10), nullable=True),
    sa.Column('credit_spread', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('default_probability', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('verification_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['date_key'], ['dim_dates.date_key'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['dim_financial_instruments.instrument_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_id', 'record_date', name='uq_gb_instrument_date')
    )
    op.create_index('idx_gb_certification', 'fact_green_bonds', ['green_certification'], unique=False)
    op.create_index('idx_gb_date_instrument', 'fact_green_bonds', ['record_date', 'instrument_id'], unique=False)
    op.create_index('idx_gb_esg_score', 'fact_green_bonds', ['esg_score', 'record_date'], unique=False)
    op.create_index('idx_gb_impact', 'fact_green_bonds', ['carbon_avoided_tonnes', 'renewable_energy_mwh'], unique=False)
    op.create_index('idx_gb_yield_rating', 'fact_green_bonds', ['yield_to_maturity', 'credit_rating'], unique=False)
    op.create_table('fact_market_indexes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('index_value', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('opening_value', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('high_value', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('low_value', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('closing_value', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('daily_return', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('volume', sa.DECIMAL(precision=20, scale=2), nullable=True),
    sa.Column('market_cap', sa.DECIMAL(precision=20, scale=2), nullable=True),
    sa.Column('moving_avg_50d', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('moving_avg_200d', sa.DECIMAL(precision=15, scale=4), nullable=True),
    sa.Column('relative_strength', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['date_key'], ['dim_dates.date_key'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['dim_financial_instruments.instrument_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_id', 'record_date', name='uq_index_instrument_date')
    )
    op.create_index('idx_index_date_instrument', 'fact_market_indexes', ['record_date', 'instrument_id'], unique=False)
    op.create_index('idx_index_value', 'fact_market_indexes', ['record_date', 'index_value'], unique=False)
    op.create_table('fact_money_market_funds',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('current_yield', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('seven_day_yield', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('thirty_day_yield', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('year_to_date_yield', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('net_asset_value', sa.DECIMAL(precision=12, scale=4), nullable=True),
    sa.Column('total_assets', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('expense_ratio', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('management_fee', sa.DECIMAL(precision=6, scale=4), nullable=True),
    sa.Column('sharpe_ratio', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('volatility', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('max_drawdown', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['date_key'], ['dim_dates.date_key'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['dim_financial_instruments.instrument_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_id', 'record_date', name='uq_mmf_instrument_date')
    )
    op.create_index('idx_mmf_date_instrument', 'fact_money_market_funds', ['record_date', 'instrument_id'], unique=False)
    op.create_index('idx_mmf_yield', 'fact_money_market_funds', ['record_date', 'current_yield'], unique=False)
    op.create_table('fact_treasury_securities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('date_key', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.Date(), nullable=False),
    sa.Column('current_price', sa.DECIMAL(precision=10, scale=4), nullable=True),
    sa.Column('yield_to_maturity', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('after_tax_ytm', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('coupon_rate', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('duration', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('convexity', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('price_premium', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('years_to_maturity', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('auction_date', sa.Date(), nullable=True),
    sa.Column('amount_offered', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('amount_accepted', sa.DECIMAL(precision=15, scale=2), nullable=True),
    sa.Column('war_rate', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('discount_rate', sa.DECIMAL(precision=8, scale=6), nullable=True),
    sa.Column('total_return_1m', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_return_3m', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('total_return_ytd', sa.DECIMAL(precision=8, scale=4), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['date_key'], ['dim_dates.date_key'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['dim_financial_instruments.instrument_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instrument_id', 'record_date', name='uq_treasury_instrument_date')
    )
    op.create_index('idx_treasury_date_instrument', 'fact_treasury_securities', ['record_date', 'instrument_id'], unique=False)
    op.create_index('idx_treasury_ytm', 'fact_treasury_securities', ['record_date', 'yield_to_maturity'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_treasury_ytm', table_name='fact_treasury_securities')
    op.drop_index('idx_treasury_date_instrument', table_name='fact_treasury_securities')
    op.drop_table('fact_treasury_securities')
    op.drop_index('idx_mmf_yield', table_name='fact_money_market_funds')
    op.drop_index('idx_mmf_date_instrument', table_name='fact_money_market_funds')
    op.drop_table('fact_money_market_funds')
    op.drop_index('idx_index_value', table_name='fact_market_indexes')
    op.drop_index('idx_index_date_instrument', table_name='fact_market_indexes')
    op.drop_table('fact_market_indexes')
    op.drop_index('idx_gb_yield_rating', table_name='fact_green_bonds')
    op.drop_index('idx_gb_impact', table_name='fact_green_bonds')
    op.drop_index('idx_gb_esg_score', table_name='fact_green_bonds')
    op.drop_index('idx_gb_date_instrument', table_name='fact_green_bonds')
    op.drop_index('idx_gb_certification', table_name='fact_green_bonds')
    op.drop_table('fact_green_bonds')
    op.drop_index('idx_forex_volatility', table_name='fact_forex_rates')
    op.drop_index('idx_forex_significant_moves', table_name='fact_forex_rates')
    op.drop_index('idx_forex_pair_date', table_name='fact_forex_rates')
    op.drop_index('idx_forex_date_instrument', table_name='fact_forex_rates')
    op.drop_table('fact_forex_rates')
    op.drop_index('idx_fd_rate_term', table_name='fact_fixed_deposits')
    op.drop_index('idx_fd_date_instrument', table_name='fact_fixed_deposits')
    op.drop_index('idx_fd_currency_term', table_name='fact_fixed_deposits')
    op.drop_index('idx_fd_amount_range', table_name='fact_fixed_deposits')
    op.drop_table('fact_fixed_deposits')
    op.drop_index('idx_etf_performance', table_name='fact_etf_performance')
    op.drop_index('idx_etf_nav_volume', table_name='fact_etf_performance')
    op.drop_index('idx_etf_expense_yield', table_name='fact_etf_performance')
    op.drop_index('idx_etf_esg_green', table_name='fact_etf_performance')
    op.drop_index('idx_etf_date_instrument', table_name='fact_etf_performance')
    op.drop_index('idx_etf_assets_flows', table_name='fact_etf_performance')
    op.drop_table('fact_etf_performance')
    op.drop_index('idx_crypto_stablecoin', table_name='fact_cryptocurrency_prices')
    op.drop_index('idx_crypto_market_cap', table_name='fact_cryptocurrency_prices')
    op.drop_index('idx_crypto_date_instrument', table_name='fact_cryptocurrency_prices')
    op.drop_table('fact_cryptocurrency_prices')
    op.drop_index('idx_co_standard_vintage', table_name='fact_carbon_offsets')
    op.drop_index('idx_co_quality_risk', table_name='fact_carbon_offsets')
    op.drop_index('idx_co_project_type', table_name='fact_carbon_offsets')
    op.drop_index('idx_co_price_volume', table_name='fact_carbon_offsets')
    op.drop_index('idx_co_date_instrument', table_name='fact_carbon_offsets')
    op.drop_table('fact_carbon_offsets')
    op.drop_index('idx_instruments_type_currency', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_stablecoin', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_maturity', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_manager', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_issuer_type', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_issuer', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_isin', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_inception', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_esg_compliance', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_cusip', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_currency_asset', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_coingecko', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_bonds_maturity', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_bloomberg', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_asset_class', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_active_type', table_name='dim_financial_instruments')
    op.drop_index('idx_instruments_active_asset_class', table_name='dim_financial_instruments')
    op.drop_table('dim_financial_instruments')
    op.drop_index('idx_entities_type_country', table_name='dim_entities')
    op.drop_index('idx_entities_active', table_name='dim_entities')
    op.drop_table('dim_entities')
    op.drop_table('dim_currencies')
    op.drop_index('idx_dates_year_month', table_name='dim_dates')
    op.drop_index('idx_dates_quarter', table_name='dim_dates')
    op.drop_index('idx_dates_market_day', table_name='dim_dates')
    op.drop_table('dim_dates')
    op.drop_table('dim_countries')
    # ### end Alembic commands ###
